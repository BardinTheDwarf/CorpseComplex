buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.wynprice.cursemaven:CurseMaven:1.1.0'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "com.wynprice.cursemaven"

version = "1.12.2-1.0.6"
group = "c4.corpsecomplex"
archivesBaseName = "corpsecomplex"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    mappings = "stable_39"
}

dependencies {
    deobfCompile curse.resolve('tough-as-nails', '2710969')
    deobfCompile curse.resolve('wearable-backpacks', '2576699')
    deobfCompile curse.resolve('thut-wearables', '2721121');
    deobfCompile curse.resolve('the-rpg-inventory-and-classarmor-mod','2522691')
    deobfCompile curse.resolve('reskillable', '2677196')
    deobfCompile curse.resolve('overpowered-inventory', '2447452')
    deobfCompile curse.resolve('cosmetic-armor-reworked','2697672')
    deobfCompile curse.resolve('the-camping-mod', '2569056')
    deobfCompile curse.resolve('baubles', '2518667')
    deobfCompile curse.resolve('advanced-inventory', '2463903')
    deobfCompile curse.resolve('sublib', '2522690')
    deobfCompile curse.resolve('rikmulds-core-mod', '2569880')
    deobfCompile curse.resolve('cxlibrary', '2463886');
}

processResources {

    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {

    onlyIf {
        project.hasProperty('keyStore')
    }

    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

build.dependsOn signJar
